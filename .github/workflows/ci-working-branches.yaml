name: Working Branches

on:
  push:
  pull_request:
    types: [ opened, reopened, synchronize, edited ]
    branches: [ feature/*, release/*, hotfix/*, bugfix/* ]
      
jobs:
  ci-test:
    runs-on: self-hosted
    steps:
      - name: Checkout Source
        uses: actions/checkout@v2

      - name: Get Current Branch Name
        run: echo "BRANCH_NAME=$(echo ${GITHUB_HEAD_REF} | tr / -)" >> $GITHUB_ENV

      - name: Get Current Branch Name
        run: echo "BRANCH_NAME=$(echo ${GITHUB_REF#refs/heads/} | tr / -)" >> $GITHUB_ENV

      - name: Permissioned Branch
        run: |
            regex_pattern="^(feature[-/]|release[-/]|hotfix[-/]|bugfix[-/]|develop|main)"
            if [[ "${{ env.BRANCH_NAME }}" =~ $regex_pattern ]]; then 
            echo "The active branch ${{ env.BRANCH_NAME }} is a valid branch." 
            else
            echo "The branch ${{ env.BRANCH_NAME }} is invalid. The pattern expected is feature/*, release/*, hotfix/*, bugfix/*, develop or main "; exit 1 
            fi
  
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.17

      - name: Test
        run: go test -v ./...

  sonarcloud:
    needs: ci-test
    runs-on: self-hosted

    steps:
      - uses: actions/checkout@v2
        with:
            fetch-depth: 0 

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
            go-version: 1.17

      - name: Create Coverage Reports
        run: |
            git config --global url."https://${{ secrets.ACCESS_TOKEN }}:@github.com/".insteadOf "https://github.com"
            go clean --testcache
            echo "Run on Example"
            cd /example && go test -v -race -coverprofile tmp/coverage.out -json ./... >> tmp/report.json && cd ..
            echo "Run on SDK"
            cd /sdk && go test -v -race -coverprofile tmp/coverage.out -json ./... >> tmp/report.json && cd ..
      
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}